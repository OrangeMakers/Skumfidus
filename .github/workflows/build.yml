name: Automated Build
run-name: Build firmware and create release

on:
  push:
    branches:
      - main
    paths:
      - 'RELEASE.md'
      
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all tags and branches
    
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.0.0
      with:
        versionSpec: '6.x'
        preferLatestVersion: true
    
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v3.0.0
      with:
        useConfigFile: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Validate RELEASE.md and update CHANGELOG.md
      id: changelog
      run: |
        python .github/scripts/update_changelog.py "${{ steps.gitversion.outputs.semVer }}" >> $GITHUB_OUTPUT

    - name: Install PlatformIO
      run: pip install platformio
    
    - name: Build debug firmware
      run: platformio run --environment esp32doit-devkit-v1-debug

    - name: Prepare debug firmware files
      run: |
        mkdir -p ./firmware-debug
        cp ./.pio/build/esp32doit-devkit-v1-debug/bootloader.bin ./firmware-debug/bootloader.bin
        cp ./.pio/build/esp32doit-devkit-v1-debug/partitions.bin ./firmware-debug/partitions.bin
        cp ~/.platformio/packages/framework-arduinoespressif32/tools/partitions/boot_app0.bin ./firmware-debug/boot_app0.bin
        cp ./.pio/build/esp32doit-devkit-v1-debug/firmware.bin ./firmware-debug/firmware.bin
        cp ./assets/Install_Firmware.cmd ./firmware-debug/Install_Firmware.cmd
        cp ./assets/Install_Firmware.ps1 ./firmware-debug/Install_Firmware.ps1
        cp ./assets/Install_Firmware.sh ./firmware-debug/Install_Firmware.sh
        cd ./firmware-debug && zip ../firmware-debug.zip * && cd ..

    - name: Build release firmware
      run: platformio run --environment esp32doit-devkit-v1

    - name: Prepare release firmware files
      run: |
        mkdir -p ./firmware
        cp ./.pio/build/esp32doit-devkit-v1/bootloader.bin ./firmware/bootloader.bin
        cp ./.pio/build/esp32doit-devkit-v1/partitions.bin ./firmware/partitions.bin
        cp ~/.platformio/packages/framework-arduinoespressif32/tools/partitions/boot_app0.bin ./firmware/boot_app0.bin
        cp ./.pio/build/esp32doit-devkit-v1/firmware.bin ./firmware/firmware.bin
        cp ./assets/Install_Firmware.cmd ./firmware/Install_Firmware.cmd
        cp ./assets/Install_Firmware.ps1 ./firmware/Install_Firmware.ps1
        cp ./assets/Install_Firmware.sh ./firmware/Install_Firmware.sh
        cd ./firmware && zip ../firmware.zip * && cd ..
      
    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.gitversion.outputs.semVer }}
        name: v${{ steps.gitversion.outputs.semVer }}
        body: ${{ steps.changelog.outputs.latest_entry }}
        files: |
          ./firmware/bootloader.bin
          ./firmware/partitions.bin
          ./firmware/boot_app0.bin
          ./firmware/firmware.bin
          ./firmware-debug.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add CHANGELOG.md RELEASE_NEXT.md
        git rm RELEASE.md
        git commit -m "Update CHANGELOG.md and create RELEASE_NEXT.md for version ${{ steps.gitversion.outputs.semVer }}"
        git push
